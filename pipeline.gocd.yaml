pipelines:
  NewPipeline:
    group: NewGroup
    materials:
      git:
        url: https://github.com/htetgit/Sample-repo.git
        branch: main
    stages:
      - name: Build
        jobs:
          - name: BuildAndTestJob
            tasks:
              - exec:
                  command: powershell
                  arguments:
                    - -Command
                    - |
                      # Initialize Go module
                      go mod init hello-world-go
                      go get github.com/gorilla/mux
                      go mod tidy
                      go build -o main.exe .

                      # Start the Go application in the background
                      $process = Start-Process -FilePath .\main.exe -ArgumentList "" -NoNewWindow -PassThru

                      # Wait for the server to start
                      Start-Sleep -Seconds 5

                      # Check if the process is running
                      if ($process.HasExited) {
                        Write-Output "The Go application has stopped running. Check the logs for errors."
                        exit 1
                      }

                      # Check the application response
                      $response = Invoke-WebRequest -Uri http://localhost:8080 -UseBasicParsing
                      if ($response.Content -eq "Hello, World!") {
                        Write-Output "Test Passed"
                      } else {
                        Write-Output "Test Failed: Expected 'Hello, World!' but received '$($response.Content)'"
                        exit 1
                      }

                      # Stop the Go application with a timeout
                      $startTime = [System.Diagnostics.Stopwatch]::StartNew()
                      while ($process.HasExited -eq $false -and $startTime.Elapsed.TotalSeconds -lt 60) {
                        Start-Sleep -Seconds 1
                      }
                      if ($process.HasExited -eq $false) {
                        Stop-Process -Id $process.Id -Force
                      }
                      Write-Output "Stopping Go application..."
                  working_directory: src/hello-app
                  environment_variables:
                    GO111MODULE: "on"
